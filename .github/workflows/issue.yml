---
name: üÜò Help wanted

on:
  issues:
    types: [opened]

jobs:
  issue:
    name: üîç Get inputs
    if: ${{ contains(github.event.issue.labels.*.name, 'help wanted') }}
    runs-on: ubuntu-latest
    outputs:
      helpneededwith: ${{ steps.inputs.outputs.help_needed_with }}
      wiki: ${{ steps.inputs.outputs.documentation_page }}
    steps:
      - name: üì• Get inputs
        id: inputs
        uses: drdonoso/issueform-get-inputs@main
        with:
          body: ${{ github.event.issue.body }}
    
  run:
    needs: issue
    runs-on: ubuntu-latest
    name: üöÄ Run 
    permissions:
      issues: write
    env:
      AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
      AZURE_OPENAI_ENDPOINT: ${{ vars.AZURE_OPENAI_API_ENDPOINT }}
      AZURE_OPENAI_API_INSTANCE_NAME: ${{ vars.AZURE_OPENAI_API_INSTANCE_NAME }}
      AZURE_OPENAI_API_VERSION: ${{ vars.AZURE_OPENAI_API_VERSION }}
      WIKISITE: ${{ needs.issue.outputs.wiki || vars.WIKISITE }}
    steps: 
      - name: üöÄ Run
        shell: bash
        run: |
          echo "Running the workflow"
          echo "Help needed with: ${{ needs.issue.outputs.helpneededwith }}"
      
      # - name: Checkout
      #   uses: actions/checkout@v2

      # - name: NPM Install
      #   run: npm install
      
      # - name: Run script
      #   id: run
      #   run: node index.js "${{ needs.issue.outputs.helpneededwith }}"

      # - name: Response issue
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       const answer = `${{steps.run.outputs.answer}}`.replace(/`/g, '\\`');
      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: `### Answer: 
      #           \`${answer}\``
      #       });

      - name: Response issue
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### Answer: 
                To install the custom connector for the CCO Azure Infrastructure Dashboard, follow these steps:
            
                1. Ensure you have downloaded and installed the Microsoft Power BI Desktop Edition from the Microsoft Store as it is a prerequisite.
                2. Locate the `CCoDashboardAzureConnector.mez` file in the `ccodashboard/dashboards/CCODashboard-Infrastructure/` folder.
                3. Copy the `CCoDashboardAzureConnector.mez` file to the Power BI default folder for custom connectors. This is typically located at `C:\Users%username%\Documents\Power BI Desktop\Custom Connectors`. If this folder does not exist, you will need to create it.
                4. If you are experiencing issues with the connector and Power BI due to OneDrive, create the folder structure within the OneDrive folder at `....\Documents\Power BI Desktop\Custom Connectors`. After doing so, the custom connector should be recognized.
                5. Open Power BI and go to Options. Under the Global category in the Security section, select (Not Recommended) Allow any extension to load without validation or warning and click OK.
                
                This process will install the custom connector required for the CCO Azure Infrastructure Dashboard to leverage information from Azure Management REST APIs.`
              });
